This is a failed experiment to attempt CORS proxying via AWS lambda. You can use this for CORS proxying a simple API as-is, but longer responses (such as binary blobs) will fail due to memory/response size limitations of lambda.

The main reasons:
- To return binary data from a lambda, you need to pipe it through Base64 encoding, which is cumbersome and slow

- Because lambda requires a JSON response, there's no method to stream the body, which is problematic for large responses. The implementation found here does try to minimize memory usage by streaming the body out inline, but it seems that the caller ends up buffering it into a JSON blob and hence the high watermark on memory use for the lambda is proportional to the response size.
